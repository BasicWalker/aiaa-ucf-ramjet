% ------ SFRJ Internal Ballistic Simulator / UCF CAPSTONE PROJECT ------ %
% File Name: Gas.m 
% 
% File Description: 
% Gas model, calculates combustion chamber pressure and air mass
% properties
% 
% Name            Date      SCR  Description
% --------------  --------  ---  ------------------------------
% Ethan Sherlock  01/22/21  000  Initial Creation 
% Ethan Sherlock  02/14/21  001  Chamber Pressure Calculation Update
% Ethan Sherlock  03/12/21  002  Added Chemistry Model 
% ---------------------------------------------------------------------- %

% Calculate air mass properties
intake.MassGen(n) = intake.massFlow(end,n)*SFRJDt;                                     % Mass of air generated (kg)
intake.OxygenGen(n) = intake.MassGen(n) * OxPercent;                              % Mass of oxygen generated by weight % (kg)        
TotalMassFlow(n) = intake.massFlow(end,n) + fuel.MassFlow(n);                            % Total mass flow (kg/s)
combustion.OFRatio(n) = intake.OxygenGen(n)/fuel.MassGen(n);                              % O/F Ratio
TotalMassGen(n) = intake.MassGen(n) + fuel.MassGen(n);                              % Total mass generated (kg)
combustion.FAR(n) = (fuel.MassGen(n)/intake.MassGen(n));                              % fuel to air ratio 

% --------------------- Chemistry Model --------------------- %
[combustion.Phi(n), T_AFT(n), nozzle.gamma(n), R_t] = chem.phiSolver(combustion.FAR(n),intake.staticTemp(end,n));     % Call Chemistry Model, need to add T_air before combustion chamber 475
% ----------------------------------------------------------- %

% % Required chamber pressure to choke flow 
% [mach,T,P,rho,area] = flowisentropic(nozzle.gamma(n),NzlARatio,'sup');   % Isentropic Relations
% PCreq(n) = (1/P)*pressure_atm(n);                                   % Calculates Stag Pres based on Pressure ratio, assumes Pstag = PC
% Temp_exit(n) = T*T_AFT;                                             % Temperature at exit plane
% Mach_exit(n) = mach;                                                % Mach at exit plane

% % Chamber Pressure based on adiabatic flame temp
% [mach, T, P, rho, area] = flowisentropic(nozzle.gamma(n), 1 ,'mach');    % Isentropic flow conditions at nozzle throat - BIGGG Assumption
% T_static(n)	= T*T_stag(n);                                          % Find static temp (K)
% a_Nzl_T(n) = sqrt(nozzle.gamma(n)*R*T_static(n));                        % Speed of sound at nozzle throat (m/s)
% V_flowRate(n) = mach * a_Nzl_T(n);                                  % Flow velocity at nozzle throat (m/s)
% Rho_static(n) = TotalMassFlow(n)/(V_flowRate(n) * NzlAT);               % Static density at nozzle throat (kg/m^3)
% Rho_stag(n) = (1/rho)*Rho_static(n);                                % Stagnation density at nozzle throat (kg/m^3)
% PC_TAFT(n) = Rho_stag(n)*R*T_stag(n)/Pa2kPa;                        % Stagnation pressure = chamber pressure (kPa)
% 
% % Isobaric Chamber Pressure 
% PC_Isobaric(n) = intake.stagPres(end,n);                                  % Constant pressure combustion (kPa)

% Fuel Mass Prop & O/F Ratio calculation
